<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hta2405.unite.mybatis.mapper.DocMapper">
    <insert id="insertGeneralDoc" parameterType="Doc" useGeneratedKeys="true" keyProperty="docId">
        insert into doc(doc_writer, doc_type, doc_title, doc_content, doc_create_date)
        VALUES (#{docWriter}, #{docType}, #{docTitle}, #{docContent}, #{docCreateDate})
    </insert>
    <insert id="insertTripDoc">
        insert into doc_trip(doc_id, trip_start, trip_end, trip_loc, trip_phone, trip_info, card_start,
                             card_end, card_return)
        VALUES (#{docId}, #{docTrip.tripStart}, #{docTrip.tripEnd}, #{docTrip.tripLoc}, #{docTrip.tripPhone},
                #{docTrip.tripInfo}, #{docTrip.cardStart}, #{docTrip.cardEnd}, #{docTrip.cardReturn})
    </insert>
    <insert id="insertBuyDoc" useGeneratedKeys="true" keyProperty="docBuyId">
        insert into doc_buy(doc_id)
        VALUES (#{docId})
    </insert>

    <insert id="insertSign">
        insert into sign(emp_id, doc_id, sign_order, sign_time) VALUES
        <foreach collection="list" item="sign" separator=",">
            (#{sign.empId}, #{sign.docId}, #{sign.signOrder}, #{sign.signTime})
        </foreach>
    </insert>
    <delete id="deleteSign">
        DELETE FROM sign
        WHERE DOC_ID = #{docId}
    </delete>
    <insert id="insertProducts">
        insert into buy_item(doc_buy_id, product_name, standard, quantity, price) VALUES
        <foreach collection="items" item="item" separator=",">
            (#{docBuyId}, #{item.productName}, #{item.standard}, #{item.quantity}, #{item.price})
        </foreach>
    </insert>
    <insert id="insertVacationDoc">
        insert into doc_vacation(doc_id, vacation_start, vacation_end, vacation_type, vacation_count,
                                 vacation_file_path, vacation_file_original, vacation_file_uuid,
                                 vacation_file_type)
        values (#{docId}, #{docVacation.vacationStart}, #{docVacation.vacationEnd}, #{docVacation.vacationType},
                #{docVacation.vacationCount}, #{docVacation.vacationFilePath},
                #{docVacation.vacationFileOriginal}, #{docVacation.vacationFileUUID}, #{docVacation.vacationFileType})
    </insert>
    <update id="updateGeneralDoc">
        UPDATE doc
        SET DOC_WRITER      = #{docWriter},
            DOC_TITLE       = #{docTitle},
            DOC_CONTENT     = #{docContent},
            DOC_CREATE_DATE = #{docCreateDate}
        WHERE DOC_ID = #{docId}
    </update>
    <select id="getInProgressDocsByEmpId">
        SELECT doc.doc_id      as docId,
               doc.doc_writer  as writer,
               doc_create_date as createDate,
               doc.doc_type    as docType,
               doc.doc_title   as docTitle,
               emp.ename       as currSignerName
        FROM doc
                 JOIN sign ON doc.doc_ID = sign.doc_ID
                 JOIN emp ON sign.emp_ID = emp.emp_ID
                 JOIN (SELECT doc_ID, MIN(sign_ORDER) AS min_sign_order
                       FROM sign
                       WHERE sign_TIME IS NULL
                       GROUP BY doc_ID) min_sign
                      ON sign.doc_ID = min_sign.doc_ID AND sign.sign_ORDER = min_sign.min_sign_order
        WHERE doc.sign_FINISH = 0
          AND sign.sign_TIME IS NULL
          AND doc_WRITER = #{empId}
          AND sign.emp_ID != doc_WRITER
        ORDER BY doc_CREATE_DATE
    </select>
    <select id="getDocById">
        select *
        from doc
        where doc_id = #{docId}
    </select>
    <select id="getSignListByDocId">
        SELECT *
        FROM sign
        WHERE DOC_ID = #{docId}
        ORDER BY SIGN_ORDER
    </select>
    <select id="getBuyItemListByDocId">
        select *
        from buy_item
        WHERE DOC_BUY_ID = (select doc_buy_id from doc_buy where doc_id = #{doc_id})
    </select>
    <select id="getDocTripByDocId">
        select *
        from doc_trip
        WHERE doc_id = #{doc_id}
    </select>
    <select id="getDocVacationByDocId">
        select *
        from doc_vacation
        WHERE doc_id = #{doc_id}
    </select>
    <select id="getWaitingDocsByEmpId">
        SELECT d.doc_id          as docId,
               d.DOC_WRITER      as writer,
               d.DOC_CREATE_DATE as createDate,
               d.DOC_TYPE        as docType,
               d.DOC_TITLE       as docTitle,
               e.ENAME           as currSignerName
        FROM doc d
                 JOIN sign s ON d.DOC_ID = s.DOC_ID
                 JOIN emp e ON s.EMP_ID = e.EMP_ID
        WHERE (d.doc_id, s.SIGN_ORDER) in (SELECT doc_id, MIN(SIGN_ORDER)
                                           FROM sign
                                           where SIGN_TIME IS NULL
                                           group by doc_id)
          AND s.SIGN_TIME IS NULL
          AND s.EMP_ID = #{empId}
        ORDER BY doc_create_date
    </select>
    <select id="getNowSigner">
        SELECT emp_id
        FROM sign
        WHERE doc_id = #{docId}
          AND SIGN_TIME IS NULL
          AND SIGN_ORDER = (SELECT MIN(SIGN_ORDER)
                            FROM sign
                            WHERE doc_id = #{docId}
                              AND SIGN_TIME IS NULL)
    </select>
    <update id="signDoc">
        UPDATE sign
        SET sign_time = now()
        WHERE doc_id = #{docId}
          and emp_id = #{empId}
    </update>
    <select id="isDocSignedByEmpId">
        SELECT CASE
                   WHEN SIGN_TIME IS NULL THEN 0
                   ELSE 1
                   END
        FROM sign
        WHERE DOC_ID = #{docId}
          AND EMP_ID = #{empId}
    </select>
    <update id="revokeDoc">
        UPDATE sign
        SET sign_time = NULL
        WHERE doc_id = #{docId}
          AND sign_order >= (SELECT sign_order_temp
                             FROM (SELECT sign_order AS sign_order_temp
                                   FROM sign
                                   WHERE doc_id = #{docId}
                                     AND emp_id = #{empId}) temp_table);
    </update>
    <delete id="deleteDoc">
        delete
        from doc
        where doc_id = #{docId}
    </delete>
    <select id="checkSignFinished">
        SELECT CASE
                   WHEN COUNT(*) = SUM(CASE WHEN sign_time IS NOT NULL THEN 1 ELSE 0 END)
                       THEN 1
                   ELSE 0
                   END AS all_signed
        FROM sign
        WHERE doc_id = #{docId}
    </select>
    <update id="setSignFinished">
        UPDATE doc
        SET SIGN_FINISH = 1
        WHERE doc_id = #{docId}
    </update>
</mapper>

