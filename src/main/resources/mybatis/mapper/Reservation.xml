<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hta2405.unite.mybatis.mapper.ReservationMapper">
    <select id="resourceSelectChange">
        SELECT *
        FROM resc
        WHERE resc_type = #{rescType} AND resc_usable = 1
        GROUP BY resc_type, resc_name, resc_usable
        ORDER BY resc_id ASC
    </select>

    <!-- 분류명의 모든 예약 자원 불러오기 -->
    <select id="resourceSelectReservation" resultType="com.hta2405.unite.dto.ReservationDTO">
        SELECT r.reservation_id, r.resource_id, r.emp_id, r.reservation_start, r.reservation_end,
               r.reservation_info, r.reservation_allDay, s.resc_type, s.resc_name
        FROM reservation r
                 JOIN resc s ON r.resource_id = s.resc_id
        WHERE s.resc_type = #{rescType}
          AND s.resc_usable = 1
          AND r.resource_id IN (
            SELECT reservation.resource_id
            FROM reservation reservation
                     JOIN resc resource ON reservation.resource_id = resource.resc_id
            WHERE resource.resc_type = #{rescType}
        )
        ORDER BY r.reservation_id
    </select>

    <!-- 중복 예약 여부 체크 -->
    <select id="checkReservationOverlap" resultType="int">
        SELECT COUNT(*)
        FROM reservation
        WHERE resource_id = #{resourceId}
        AND (
            <!-- 종일 예약과 새 예약이 중복되는지 검사 -->
            (reservation_allDay = 1 AND
            reservation_start &lt;= #{reservationEnd} AND reservation_end &gt;= #{reservationStart})
            OR
            <!-- 시간 기반 예약과 새 예약이 중복되는지 검사 -->
            (reservation_allDay = 0 AND
            #{reservationStart} &lt; reservation_end AND #{reservationEnd} &gt; reservation_start)
            OR
            <!-- 종일 예약이 아닌 경우 시작 시간과 종료 시간이 같은 경우 중복 처리 -->
            (reservation_allDay = 0 AND reservation_start = #{reservationStart} AND reservation_end = #{reservationEnd})
        )
    </select>

    <select id="getReservationsByResourceId" resultType="com.hta2405.unite.dto.ReservationDTO">
        SELECT reservation_start, reservation_end, resource_id
        FROM reservation
        WHERE resource_id = #{resourceId}
    </select>

    <!-- 예약 추가 -->
    <insert id="resourceReservation" parameterType="com.hta2405.unite.dto.ReservationDTO">
        INSERT INTO reservation
        (resource_id, emp_id, reservation_start, reservation_end, reservation_info, reservation_allDay)
        VALUES
            (#{resourceId}, #{empId}, #{reservationStart}, #{reservationEnd}, #{reservationInfo}, #{reservationAllDay})
    </insert>

    <select id="getReservationByResourceIdAndName" resultType="com.hta2405.unite.dto.ReservationDTO">
        SELECT r.*, s.resc_name, r.emp_id
        FROM reservation r
                 JOIN resc s ON r.resource_id = s.resc_id
        WHERE r.resource_id = #{resourceId}
          AND s.resc_name = #{resourceName};
    </select>

    <select id="getAllReservation" resultType="com.hta2405.unite.dto.ReservationDTO">
        SELECT *
        FROM reservation
    </select>

    <!-- 자원예약 상세정보 팝업-->
    <select id="getReservationModal" resultType="com.hta2405.unite.dto.ReservationDTO">
        SELECT
            -- 자원 정보
            resc.resc_type AS resourceType,
            resc.resc_name AS resourceName,
            resc.resc_info AS resourceInfo,
            resc.resc_usable AS resourceUsable,

            -- 예약 정보
            reservation.reservation_id,
            reservation.resource_id,
            reservation.emp_id,
            reservation.reservation_start,
            reservation.reservation_end,
            reservation.reservation_info,
            reservation.reservation_allDay,

            -- 예약자 정보
            emp.ename
        FROM reservation
             LEFT JOIN resc resc ON reservation.resource_id = resc.resc_id
             LEFT JOIN emp emp ON reservation.emp_id = emp.emp_id
        WHERE reservation.reservation_id = #{reservationId}
    </select>

    <delete id="cancelReservation">
        DELETE
        FROM reservation
        WHERE reservation_id = #{reservationId} AND emp_id = #{empId}
    </delete>

    <select id="getMyReservationList" resultType="com.hta2405.unite.dto.ReservationDTO">
        SELECT
            rs.resc_type AS resourceType,
            rs.resc_name AS resourceName,
            rs.resc_info AS resourceInfo,
            reservation.reservation_start,
            reservation.reservation_end,
            reservation.reservation_info,
            reservation.reservation_id
        FROM reservation
                 JOIN resc rs
                      ON reservation.resource_id = rs.resc_id
        WHERE reservation.emp_id = #{empId}
        ORDER BY reservation.reservation_id;
    </select>
</mapper>