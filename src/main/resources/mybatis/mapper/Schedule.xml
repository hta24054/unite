<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hta2405.unite.mybatis.mapper.ScheduleMapper">

    <select id="getListSchedule" resultType="schedule">
        select *
        from schedule
        where emp_id = #{empId}
    </select>

    <insert id="insertSchedule" parameterType="com.hta2405.unite.domain.Schedule">
        INSERT INTO schedule
        (emp_id, schedule_name, schedule_content, schedule_start, schedule_end, schedule_color, schedule_allDay)
        VALUES (#{empId}, #{scheduleName}, #{scheduleContent}, #{scheduleStart}, #{scheduleEnd}, #{scheduleColor}, #{scheduleAllDay})
    </insert>

    <update id="updateSchedule">
        UPDATE schedule
        SET    schedule_name = #{scheduleName}, schedule_start = #{scheduleStart}, schedule_end = #{scheduleEnd},
               schedule_color = #{scheduleColor}, schedule_content = #{scheduleContent}, schedule_allDay = #{scheduleAllDay}
        WHERE  schedule_id = #{scheduleId} AND emp_id = #{empId}
    </update>

    <update id="dragUpdateSchedule">
        UPDATE schedule
        SET    schedule_start = #{scheduleStart}, schedule_end = #{scheduleEnd},
               schedule_allDay = #{scheduleAllDay}
        WHERE  schedule_id = #{scheduleId} AND emp_id = #{empId}
    </update>

    <delete id="deleteSchedule">
        DELETE FROM schedule
        WHERE schedule_id = #{scheduleId}
    </delete>

    <!-- 공유 일정 등록 -->
    <insert id="insertScheduleShare">
        INSERT INTO schedule
        (emp_id, schedule_name, schedule_content, schedule_start, schedule_end, schedule_color, schedule_allDay)
        VALUES (#{empId}, #{scheduleName}, #{scheduleContent},
        #{scheduleStart}, #{scheduleEnd}, #{scheduleColor}, #{scheduleAllDay})

        <selectKey resultType="int" keyProperty="scheduleId" keyColumn="schedule_id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="insertScheduleShareUsers" parameterType="map">
        INSERT INTO schedule_share
        (share_emp, schedule_id)
        VALUES (#{shareEmp}, #{scheduleId});
    </insert>

    <select id="getListSharedSchedule" resultType="schedule">
        SELECT
            s.schedule_id,
            s.emp_id,
            s.schedule_name,
            s.schedule_content,
            s.schedule_start,
            s.schedule_end,
            s.schedule_color,
            s.schedule_allDay,
            (SELECT ename FROM emp WHERE emp_id = #{empId}) AS empIdName, -- 로그인한 사용자의 이름을 가져옵니다.
            GROUP_CONCAT(ss.share_emp) AS share_emp, -- 공유된 직원들의 emp_id
            GROUP_CONCAT(e.ename) AS share_emp_names -- 공유된 직원들의 이름
        FROM schedule s
                 JOIN schedule_share ss ON s.schedule_id = ss.schedule_id
                 LEFT JOIN emp e ON ss.share_emp REGEXP CONCAT('(^|,)', e.emp_id, '(,|$)') -- share_emp와 일치하는 emp_id 이름
        WHERE s.emp_id = #{empId}
           OR ss.share_emp LIKE CONCAT('%', #{shareEmp}, '%')
        GROUP BY s.schedule_id, s.emp_id, s.schedule_name, s.schedule_content,
            s.schedule_start, s.schedule_end, s.schedule_color, s.schedule_allDay;
    </select>

<!--    <select id="getListSharedSchedule" resultType="schedule">-->
<!--        SELECT-->
<!--            s.schedule_id,-->
<!--            s.emp_id,-->
<!--            s.schedule_name,-->
<!--            s.schedule_content,-->
<!--            s.schedule_start,-->
<!--            s.schedule_end,-->
<!--            s.schedule_color,-->
<!--            s.schedule_allDay,-->
<!--            (SELECT ename FROM emp WHERE emp_id = #{empId}) AS ename,-->
<!--            GROUP_CONCAT(ss.share_emp) AS share_emp, &#45;&#45; 공유된 직원들의 emp_id-->
<!--            GROUP_CONCAT(e.ename) AS share_emp_names &#45;&#45; 공유된 직원들의 이름-->
<!--        FROM schedule s-->
<!--                 JOIN schedule_share ss ON s.schedule_id = ss.schedule_id-->
<!--                 LEFT JOIN emp e ON ss.share_emp REGEXP CONCAT('(^|,)', e.emp_id, '(,|$)') &#45;&#45; share_emp와 일치하는 emp_id 이름-->
<!--        WHERE s.emp_id = #{empId}-->
<!--           OR ss.share_emp LIKE CONCAT('%', #{shareEmp}, '%')-->
<!--        GROUP BY s.schedule_id, s.emp_id, s.schedule_name, s.schedule_content,-->
<!--            s.schedule_start, s.schedule_end, s.schedule_color, s.schedule_allDay;-->
<!--    </select>-->

    <!-- 공유 직원 조회 -->
    <select id="getScheduleSharesByScheduleId" resultType="com.hta2405.unite.domain.ScheduleShare">
        SELECT schedule_share_id, share_emp, schedule_id
        FROM schedule_share
        WHERE schedule_id = #{scheduleId}
    </select>

    <select id="getShareEmpNames" resultType="string">
        SELECT GROUP_CONCAT(e.ename)
        FROM emp e
                 JOIN schedule_share ss ON FIND_IN_SET(e.emp_id, ss.share_emp) > 0
        WHERE ss.schedule_id = #{scheduleId}
    </select>

    <select id="getEmpIdName" resultType="string">
        SELECT e.ename
        FROM emp e
        WHERE e.emp_id = #{empId}
    </select>

</mapper>
